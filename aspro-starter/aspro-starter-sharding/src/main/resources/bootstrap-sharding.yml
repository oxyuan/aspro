# 分库分表规则
sharding.slice:
  database: 2
  table: 3

spring:
  autoconfigure:
    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
  # [v4.1.1]
  #  sharding-sphere:
  #    props:
  #      sql:
  #        show: true
  #    sharding:
  #      tables:
  #        msg:
  #          actualDataNodes: ds$->{1..${sharding.slice.database}}.msg_$->{1..${sharding.slice.table}}
  #          databaseStrategy:
  #            standard:
  #              preciseAlgorithmClassName: org.atbyuan.aspro.sharding.algorithm.DbPreciseShardingAlgorithm
  #              shardingColumn: config_id
  #          keyGenerator:
  #            column: id
  #            type: SNOWFLAKE
  #          logicTable: msg
  #          tableStrategy:
  #            standard:
  #              preciseAlgorithmClassName: org.atbyuan.aspro.sharding.algorithm.TablePreciseShardingAlgorithm
  #              shardingColumn: release_time

  # [v5.2.0]
#  sharding-sphere:
#    props:
#      sql-show: true
#    rules:
#      sharding:
#        tables:
#          msg: # 逻辑表名
#            actual-data-nodes: ds$->{1..${sharding.slice.database}}.msg_$->{1..${sharding.slice.table}} #分表后需要使用的表
#            database-strategy:
#              standard:
#                sharding-column: config_id
#                sharding-algorithm-name: db-strategy
#            table-strategy: #分表策略配置
#              standard:
#                sharding-column: release_time  #分表字段
#                shardingAlgorithmName: table-strategy  #分片算法名称
#        sharding-algorithms:
#          db-strategy:
#            type: CLASS_BASED  # 分片算法配置:自定义类
#            props:
#              strategy: STANDARD
#              algorithmClassName: org.atbyuan.aspro.sharding.algorithm.DbPreciseShardingAlgorithm  #自定义分片类
#          table-strategy: #分片算法名称
#            type: CLASS_BASED  # 分片算法配置:自定义类
#            props:
#              strategy: STANDARD
#              algorithmClassName: org.atbyuan.aspro.sharding.algorithm.TablePreciseShardingAlgorithm  #自定义分片类

#logging.level:
#  org:
#    example:
#      web:
#        dao: DEBUG
#mybatis:
#  mapper-locations: classpath:mapper/*.xml
#  type-aliases-package: org.atbyuan.aspro.common.pojo.entity


#=============================================>[ dev ]<=============================================
---
spring:
  profiles: dev
  cloud:
    nacos:
      config:
        extension-configs:
          - data-id: aspro-starter-sharding.yaml
            group: aspro
            refresh: true
#  sharding-sphere:
#    datasource:
#      names: ds1,ds2
#      ds1:
#        driver-class-name: com.mysql.cj.jdbc.Driver
##        type: com.zaxxer.hikari.HikariDataSource
##        jdbc-url: jdbc:mysql://:3306/sharding_0
#        url: jdbc:mysql://:3306/sharding_0
#        type: com.alibaba.druid.pool.DruidDataSource
#        username: root
#        password:
#      ds2:
#        driver-class-name: com.mysql.cj.jdbc.Driver
##        type: com.zaxxer.hikari.HikariDataSource
##        jdbc-url: jdbc:mysql://:3306/sharding_1
#        url: jdbc:mysql://:3306/sharding_1
#        type: com.alibaba.druid.pool.DruidDataSource
#        username: root
#        password:

#=============================================>[ prod ]<=============================================
---
spring:
  profiles: prod
  cloud:
    nacos:
      config:
        extension-configs:
          - data-id: aspro-starter-sharding.yaml
            group: aspro
            refresh: true
  sharding-sphere:
    datasource:
      names: ds1,ds2
      ds1:
        driver-class-name: com.mysql.cj.jdbc.Driver
        #        url: jdbc:mysql://:3306/sharding_0
        #        type: com.alibaba.druid.pool.DruidDataSource
        jdbc-url: jdbc:mysql://:3306/sharding_0
        type: com.zaxxer.hikari.HikariDataSource
        username: root
        password:
      ds2:
        driver-class-name: com.mysql.cj.jdbc.Driver
        #        jdbc-url: jdbc:mysql://:3306/sharding_1
        #        type: com.alibaba.druid.pool.DruidDataSource
        jdbc-url: jdbc:mysql://:3306/sharding_1
        type: com.zaxxer.hikari.HikariDataSource
        username: root
        password: